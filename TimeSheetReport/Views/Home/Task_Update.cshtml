@model TimeSheetReport.Models.TaskViewModel

@{
    ViewBag.Title = "Task_Update";
    string datetime = Model.task.SubmitBy.Year + "-"
        + (Model.task.SubmitBy.Month > 10 ? Model.task.SubmitBy.Month.ToString() : "0" + Model.task.SubmitBy.Month) + "-"
        + (Model.task.SubmitBy.Day > 10 ? Model.task.SubmitBy.Day.ToString() : "0" + Model.task.SubmitBy.Day) + "T"
        + (Model.task.SubmitBy.TimeOfDay.Hours > 10 ? Model.task.SubmitBy.TimeOfDay.Hours.ToString() : "0" + Model.task.SubmitBy.TimeOfDay.Hours) + ":"
        + (Model.task.SubmitBy.TimeOfDay.Minutes > 10 ? Model.task.SubmitBy.TimeOfDay.Minutes.ToString() : "0" + Model.task.SubmitBy.TimeOfDay.Minutes);
}

@if (Convert.ToInt32(Session["userId"]) >= 1)
{
    <h2 align="center">Update Task</h2>


    using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal" align="center">
            <h4>Task</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.task.Id)

            <div class="form-group">
                @Html.LabelFor(model => model.task.Title, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.task.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.task.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.task.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.task.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.task.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.task.SubmitBy, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.Time, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Time, "", new { @class = "text-danger" })*@
                    <input type="datetime-local" name="task.SubmitBy" value="@datetime" />
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.task.TraineeId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select name="task.TraineeId">
                        @foreach (TimeSheetReport.Models.Users user in Model.users)
                        {
                            <option value="@user.Id">@user.Name</option>
                        }
                    </select>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.task.TrainerId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.task.TrainerId, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.task.TrainerId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.task.StatusId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.task.StatusId, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.task.StatusId, "", new { @class = "text-danger" })*@
                    <select name="task.StatusId">
                        @foreach (TimeSheetReport.Models.Status status in Model.statuses)
                        {
                            <option value="@status.Id">@status.Name</option>
                        }
                    </select>
                </div>
            </div>

            @*<div class="form-group">
                    @Html.LabelFor(model => model.task.Extension, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.task.Extension)
                            @Html.ValidationMessageFor(model => model.task.Extension, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.createdOn, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.createdOn, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.createdOn, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.modifiedOn, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.modifiedOn, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.modifiedOn, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.deletedOn, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.deletedOn, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.deletedOn, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.isDeleted, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.isDeleted)
                            @Html.ValidationMessageFor(model => model.isDeleted, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>*@

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" style="font-weight:bold; background-color:yellow; color:black" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Task_Read")
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
